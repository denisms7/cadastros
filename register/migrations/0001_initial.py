# Generated by Django 5.2.5 on 2025-09-15 19:43

import django.db.models.deletion
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='HistoricalRegister',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('type', models.PositiveSmallIntegerField(choices=[(0, 'Pessoa Física'), (1, 'Pessoa Jurídica')], default=None, verbose_name='Tipo')),
                ('active', models.BooleanField(choices=[(True, 'Ativo'), (False, 'Inativo')], default=True, verbose_name='Ativo')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='Cadastro')),
                ('legal', models.CharField(blank=True, max_length=200, null=True, verbose_name='Razão Social')),
                ('fantasy', models.CharField(blank=True, max_length=200, null=True, verbose_name='Nome Fantasia')),
                ('n_state', models.CharField(blank=True, max_length=14, null=True, verbose_name='Incrição Estadual')),
                ('n_municipal', models.CharField(blank=True, max_length=14, null=True, verbose_name='Incrição Municipal')),
                ('cnpj', models.CharField(blank=True, db_index=True, max_length=18, null=True, verbose_name='CNPJ')),
                ('cnpj_situation', models.CharField(blank=True, max_length=200, null=True, verbose_name='Situação')),
                ('cnpj_carrying', models.CharField(blank=True, max_length=200, null=True, verbose_name='Porte de Empresa')),
                ('cnpj_date', models.DateField(blank=True, null=True, verbose_name='Data de Abertura')),
                ('cnpj_type_activity', models.CharField(blank=True, max_length=200, null=True, verbose_name='Tipo')),
                ('cnpj_activity', models.TextField(blank=True, max_length=2000, null=True, verbose_name='Atividade Principal')),
                ('name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Nome')),
                ('last_name', models.CharField(blank=True, max_length=150, null=True, verbose_name='Sobrenome')),
                ('cpf', models.CharField(blank=True, db_index=True, max_length=14, null=True, verbose_name='CPF')),
                ('rg', models.CharField(blank=True, max_length=11, null=True, verbose_name='RG (Descontinuado)')),
                ('rg_issuer', models.CharField(blank=True, max_length=3, null=True, verbose_name='Emissor')),
                ('rg_expedition', models.DateField(blank=True, null=True, verbose_name='Expedicao')),
                ('birth', models.DateField(blank=True, null=True, verbose_name='Nascimento')),
                ('education', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Sem Ensino'), (2, 'Fundamental - Incompleto'), (3, 'Fundamental - Completo'), (4, 'Médio - Incompleto'), (5, 'Médio - Completo'), (6, 'Superior - Incompleto'), (7, 'Superior - Completo'), (8, 'Pós-graduação (Lato senso) - Incompleto'), (9, 'Pós-graduação (Lato senso) - Completo'), (10, 'Pós-graduação (Stricto sensu, nível mestrado) - Incompleto'), (11, 'Pós-graduação (Stricto sensu, nível mestrado) - Completo'), (12, 'Pós-graduação (Stricto sensu, nível doutor) - Incompleto'), (13, 'Pós-graduação (Stricto sensu, nível doutor) - Completo')], null=True, verbose_name='Escolaridade')),
                ('sex', models.CharField(blank=True, choices=[('M', 'Masculino'), ('F', 'Feminino'), ('O', 'Outros'), ('-', 'Não Informado')], max_length=1, null=True, verbose_name='Sexo')),
                ('spouse_status', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Casado'), (2, 'Divorciado'), (3, 'Solteiro'), (4, 'União Estavel'), (5, 'Viúvo')], null=True, verbose_name='Estado Civil')),
                ('spouse_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Nome do Conjuge')),
                ('spouse_last_name', models.CharField(blank=True, max_length=150, null=True, verbose_name='Sobrenome do Conjuge')),
                ('mother_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Nome da Mãe')),
                ('mother_last_name', models.CharField(blank=True, max_length=150, null=True, verbose_name='Sobrenome da Mãe')),
                ('father_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Nome do Pai')),
                ('father_last_name', models.CharField(blank=True, max_length=150, null=True, verbose_name='Sobrenome do Pai')),
                ('obs', models.TextField(blank=True, max_length=2000, null=True, verbose_name='Observações')),
                ('cnh_n', models.CharField(blank=True, max_length=50, null=True, verbose_name='CNH')),
                ('cnh_emission', models.DateField(blank=True, null=True, verbose_name='Emissão')),
                ('cnh_validity', models.DateField(blank=True, null=True, verbose_name='Validade')),
                ('cnh_category', models.CharField(blank=True, choices=[('ACC', 'ACC'), ('A', 'A'), ('B', 'B'), ('AB', 'AB'), ('C', 'C'), ('D', 'D'), ('E', 'E')], max_length=5, null=True, verbose_name='Categoria')),
                ('email_1', models.EmailField(blank=True, max_length=150, null=True, verbose_name='E-mail')),
                ('email_2', models.EmailField(blank=True, max_length=150, null=True, verbose_name='E-mail')),
                ('phone_1', models.CharField(blank=True, max_length=15, null=True, verbose_name='Contato')),
                ('phone_1_type', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Telefone'), (2, 'WhatsApp')], null=True)),
                ('phone_2', models.CharField(blank=True, max_length=15, null=True, verbose_name='Contato')),
                ('phone_2_type', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Telefone'), (2, 'WhatsApp')], null=True)),
                ('phone_3', models.CharField(blank=True, max_length=15, null=True, verbose_name='Contato')),
                ('phone_3_type', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Telefone'), (2, 'WhatsApp')], null=True)),
                ('link_1', models.URLField(blank=True, null=True, verbose_name='Link')),
                ('link_2', models.URLField(blank=True, null=True, verbose_name='Link')),
                ('obs_contact', models.TextField(blank=True, max_length=2000, null=True, verbose_name='Observações')),
                ('cep', models.CharField(blank=True, max_length=10, null=True, verbose_name='CEP')),
                ('state', models.CharField(blank=True, max_length=2, null=True, verbose_name='Estado')),
                ('city', models.CharField(blank=True, max_length=200, null=True, verbose_name='Cidade')),
                ('neighborhood', models.CharField(blank=True, max_length=200, null=True, verbose_name='Bairro')),
                ('address', models.CharField(blank=True, max_length=250, null=True, verbose_name='Endereço')),
                ('number', models.IntegerField(blank=True, default=0, null=True, verbose_name='Número')),
                ('complement', models.CharField(blank=True, max_length=250, null=True, verbose_name='Complemento')),
                ('obs_address', models.TextField(blank=True, max_length=2000, null=True, verbose_name='Observações')),
                ('title_holder', models.CharField(blank=True, max_length=50, null=True, verbose_name='Nome/Razão')),
                ('document_type', models.PositiveSmallIntegerField(blank=True, choices=[(0, 'CPF'), (1, 'CNPJ')], null=True, verbose_name='Tipo de Documento')),
                ('document_holder', models.CharField(blank=True, max_length=18, null=True, verbose_name='CPF/CNPJ')),
                ('account_type', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Conta Corrente'), (2, 'Conta Salário'), (3, 'Conta Poupança')], null=True, verbose_name='Tipo de Conta')),
                ('bank', models.IntegerField(blank=True, default=0, null=True, verbose_name='N° Banco')),
                ('agency', models.CharField(blank=True, max_length=10, null=True, verbose_name='Agencia')),
                ('account', models.CharField(blank=True, max_length=50, null=True, verbose_name='N° Conta')),
                ('digit', models.CharField(blank=True, max_length=5, null=True, verbose_name='Dígito')),
                ('pix_1', models.CharField(blank=True, max_length=250, null=True, verbose_name='Chave PIX')),
                ('pix_2', models.CharField(blank=True, max_length=250, null=True, verbose_name='Chave PIX')),
                ('obs_bank', models.TextField(blank=True, max_length=2000, null=True, verbose_name='Observações')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Cadastrado')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical register',
                'verbose_name_plural': 'historical registers',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Register',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.PositiveSmallIntegerField(choices=[(0, 'Pessoa Física'), (1, 'Pessoa Jurídica')], default=None, verbose_name='Tipo')),
                ('active', models.BooleanField(choices=[(True, 'Ativo'), (False, 'Inativo')], default=True, verbose_name='Ativo')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Cadastro')),
                ('legal', models.CharField(blank=True, max_length=200, null=True, verbose_name='Razão Social')),
                ('fantasy', models.CharField(blank=True, max_length=200, null=True, verbose_name='Nome Fantasia')),
                ('n_state', models.CharField(blank=True, max_length=14, null=True, verbose_name='Incrição Estadual')),
                ('n_municipal', models.CharField(blank=True, max_length=14, null=True, verbose_name='Incrição Municipal')),
                ('cnpj', models.CharField(blank=True, max_length=18, null=True, unique=True, verbose_name='CNPJ')),
                ('cnpj_situation', models.CharField(blank=True, max_length=200, null=True, verbose_name='Situação')),
                ('cnpj_carrying', models.CharField(blank=True, max_length=200, null=True, verbose_name='Porte de Empresa')),
                ('cnpj_date', models.DateField(blank=True, null=True, verbose_name='Data de Abertura')),
                ('cnpj_type_activity', models.CharField(blank=True, max_length=200, null=True, verbose_name='Tipo')),
                ('cnpj_activity', models.TextField(blank=True, max_length=2000, null=True, verbose_name='Atividade Principal')),
                ('name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Nome')),
                ('last_name', models.CharField(blank=True, max_length=150, null=True, verbose_name='Sobrenome')),
                ('cpf', models.CharField(blank=True, max_length=14, null=True, unique=True, verbose_name='CPF')),
                ('rg', models.CharField(blank=True, max_length=11, null=True, verbose_name='RG (Descontinuado)')),
                ('rg_issuer', models.CharField(blank=True, max_length=3, null=True, verbose_name='Emissor')),
                ('rg_expedition', models.DateField(blank=True, null=True, verbose_name='Expedicao')),
                ('birth', models.DateField(blank=True, null=True, verbose_name='Nascimento')),
                ('education', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Sem Ensino'), (2, 'Fundamental - Incompleto'), (3, 'Fundamental - Completo'), (4, 'Médio - Incompleto'), (5, 'Médio - Completo'), (6, 'Superior - Incompleto'), (7, 'Superior - Completo'), (8, 'Pós-graduação (Lato senso) - Incompleto'), (9, 'Pós-graduação (Lato senso) - Completo'), (10, 'Pós-graduação (Stricto sensu, nível mestrado) - Incompleto'), (11, 'Pós-graduação (Stricto sensu, nível mestrado) - Completo'), (12, 'Pós-graduação (Stricto sensu, nível doutor) - Incompleto'), (13, 'Pós-graduação (Stricto sensu, nível doutor) - Completo')], null=True, verbose_name='Escolaridade')),
                ('sex', models.CharField(blank=True, choices=[('M', 'Masculino'), ('F', 'Feminino'), ('O', 'Outros'), ('-', 'Não Informado')], max_length=1, null=True, verbose_name='Sexo')),
                ('spouse_status', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Casado'), (2, 'Divorciado'), (3, 'Solteiro'), (4, 'União Estavel'), (5, 'Viúvo')], null=True, verbose_name='Estado Civil')),
                ('spouse_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Nome do Conjuge')),
                ('spouse_last_name', models.CharField(blank=True, max_length=150, null=True, verbose_name='Sobrenome do Conjuge')),
                ('mother_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Nome da Mãe')),
                ('mother_last_name', models.CharField(blank=True, max_length=150, null=True, verbose_name='Sobrenome da Mãe')),
                ('father_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Nome do Pai')),
                ('father_last_name', models.CharField(blank=True, max_length=150, null=True, verbose_name='Sobrenome do Pai')),
                ('obs', models.TextField(blank=True, max_length=2000, null=True, verbose_name='Observações')),
                ('cnh_n', models.CharField(blank=True, max_length=50, null=True, verbose_name='CNH')),
                ('cnh_emission', models.DateField(blank=True, null=True, verbose_name='Emissão')),
                ('cnh_validity', models.DateField(blank=True, null=True, verbose_name='Validade')),
                ('cnh_category', models.CharField(blank=True, choices=[('ACC', 'ACC'), ('A', 'A'), ('B', 'B'), ('AB', 'AB'), ('C', 'C'), ('D', 'D'), ('E', 'E')], max_length=5, null=True, verbose_name='Categoria')),
                ('email_1', models.EmailField(blank=True, max_length=150, null=True, verbose_name='E-mail')),
                ('email_2', models.EmailField(blank=True, max_length=150, null=True, verbose_name='E-mail')),
                ('phone_1', models.CharField(blank=True, max_length=15, null=True, verbose_name='Contato')),
                ('phone_1_type', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Telefone'), (2, 'WhatsApp')], null=True)),
                ('phone_2', models.CharField(blank=True, max_length=15, null=True, verbose_name='Contato')),
                ('phone_2_type', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Telefone'), (2, 'WhatsApp')], null=True)),
                ('phone_3', models.CharField(blank=True, max_length=15, null=True, verbose_name='Contato')),
                ('phone_3_type', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Telefone'), (2, 'WhatsApp')], null=True)),
                ('link_1', models.URLField(blank=True, null=True, verbose_name='Link')),
                ('link_2', models.URLField(blank=True, null=True, verbose_name='Link')),
                ('obs_contact', models.TextField(blank=True, max_length=2000, null=True, verbose_name='Observações')),
                ('cep', models.CharField(blank=True, max_length=10, null=True, verbose_name='CEP')),
                ('state', models.CharField(blank=True, max_length=2, null=True, verbose_name='Estado')),
                ('city', models.CharField(blank=True, max_length=200, null=True, verbose_name='Cidade')),
                ('neighborhood', models.CharField(blank=True, max_length=200, null=True, verbose_name='Bairro')),
                ('address', models.CharField(blank=True, max_length=250, null=True, verbose_name='Endereço')),
                ('number', models.IntegerField(blank=True, default=0, null=True, verbose_name='Número')),
                ('complement', models.CharField(blank=True, max_length=250, null=True, verbose_name='Complemento')),
                ('obs_address', models.TextField(blank=True, max_length=2000, null=True, verbose_name='Observações')),
                ('title_holder', models.CharField(blank=True, max_length=50, null=True, verbose_name='Nome/Razão')),
                ('document_type', models.PositiveSmallIntegerField(blank=True, choices=[(0, 'CPF'), (1, 'CNPJ')], null=True, verbose_name='Tipo de Documento')),
                ('document_holder', models.CharField(blank=True, max_length=18, null=True, verbose_name='CPF/CNPJ')),
                ('account_type', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Conta Corrente'), (2, 'Conta Salário'), (3, 'Conta Poupança')], null=True, verbose_name='Tipo de Conta')),
                ('bank', models.IntegerField(blank=True, default=0, null=True, verbose_name='N° Banco')),
                ('agency', models.CharField(blank=True, max_length=10, null=True, verbose_name='Agencia')),
                ('account', models.CharField(blank=True, max_length=50, null=True, verbose_name='N° Conta')),
                ('digit', models.CharField(blank=True, max_length=5, null=True, verbose_name='Dígito')),
                ('pix_1', models.CharField(blank=True, max_length=250, null=True, verbose_name='Chave PIX')),
                ('pix_2', models.CharField(blank=True, max_length=250, null=True, verbose_name='Chave PIX')),
                ('obs_bank', models.TextField(blank=True, max_length=2000, null=True, verbose_name='Observações')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='Cadastrado')),
            ],
        ),
    ]
